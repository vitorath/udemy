-- USE UMA CLÁUSULA WHERE PARA FILTRAR LINHAS
	
---- RUIM (recupera todas as linhas da tabela customers)
SELECT * FROM TALUNO;

---- BOM (usa uma cláusula WHERE para limitar as linhas recuperadas)
SELECT *
FROM TALUNO
WHERE COD_ALUNO IN (1, 2);

-- USE JOINS DE TABELA EM VEZ DE VÁRIAS CONSULTAS

---- RUIM (duas consultas separadas, quando uma seria suficiente)
SELECT nome, cod_aluno
FROM taluno
WHERE cod_aluno = 1;

SELECT data, total
FROM tcontrato
WHERE cod_aluno = 1;

---- BOM (uma única consulta com um join)]
SELECT CON.DATA, ALU.NOME, CON.TOTAL
FROM TCONTRATO CON, TALUNO ALU
WHERE CON.COD_ALUNO = ALU.COD_ALUNO
AND CON.COD_CONTRATO = 1;

-- USE REFERÊNCIAS DE COLUNA TOTALMENTE QUALIFICADAS AO FAZER JOINS

---- RUIM (as colunas TOTAL não esta totalmente qualificada)
SELECT CON.DATA, ALU.NOME, TOTAL
FROM TCONTRATO CON, TALUNO ALU
WHERE CON.COD_ALUNO = ALU.COD_ALUNO
AND CON.COD_CONTRATO = 1;

---- BOM (s colunas estao totalmente qualificada)
SELECT CON.DATA, ALU.NOME, CON.TOTAL
FROM TCONTRATO CON, TALUNO ALU
WHERE CON.COD_ALUNO = ALU.COD_ALUNO
AND CON.COD_CONTRATO = 1;

-- USE EXPRESSÕES CASE EM VEZ DE VÁRIAS CONSULTAS

---- RUIM (três consultas separadas, quando uma única instrução CASE
SELECT COUNT(*) FROM TCURSO WHERE VALOR < 800;
SELECT COUNT(*) FROM TCURSO WHERE VALOR BETWEEN 1000 AND 1500;
SELECT COUNT(*) FROM TCURSO WHERE VALOR > 1200;

---- BOM (uma única consulta com uma expressão CASE)
SELECT
	COUNT(CASE WHEN VALOR < 800 THEN 1 ELSE null END) baixo,
	COUNT(CASE WHEN VALOR BETWEEN 800 AND 1200 THEN 1 ELSE null END) medio,
	COUNT(CASE WHEN VALOR > 1500 THEN 1 ELSE null END) alto
FROM TCURSO;

-- ADICIONE ÍNDICES NAS TABELAS

-- USE WHERE EM VEZ DE HAVING

---- RUIM (usa HAVING em vez de WHERE)
SELECT COD_ALUNO, AVG(TOTAL)
FROM TCONTRATO
GROUP BY COD_ALUNO
HAVING COD_ALUNO IN (1, 2);

---- BOM (usa WHERE em vez de HAVING)
SELECT COD_ALUNO, AVG(TOTAL)
FROM TCONTRATO
WHERE COD_ALUNO IN (1, 2)
GROUP BY COD_ALUNO;

-- USE UNION ALL EM VEZ DE UNION

---- RUIM (usa UNION em vez de UNION ALL)
SELECT COD_ALUNO, NOME, CIDADE
FROM TALUNO
WHERE ESTADO = 'RS'
UNION
SELECT COD_ALUNO, NOME, CIDADE
FROM COD_ALUNO = 1;

---- BOM (usa UNION ALL em vez de UNION)
SELECT COD_ALUNO, NOME, CIDADE
FROM TALUNO
WHERE ESTADO = 'RS'
UNION ALL
SELECT COD_ALUNO, NOME, CIDADE
FROM COD_ALUNO = 1;

-- USE EXISTS EM VEZ DE IN

---- RUIM (usa IN em vez de EXISTS)
SELECT COD_CURSO, NOME
FROM TCURSO
WHERE COD_CURSO IN (SELECT COD_CURSO FROM TITEM);

---- BOM (usa EXISTS em vez de IN)
SELECT COD_CURSO, NOME
FROM TCURSO cur
WHERE EXISTS (SELECT 1 FROM TITEM ite WHERE ite.COD_CURSO = cur.COD_CURSO);

-- USE EXISTS EM VEZ DE DISTINCT

---- RUIM (usa DISTINCT quando EXISTS funcionaria)
SELECT DISTINCT ITE.COD_CURSO, CUR.NOME
FROM TCURSO cur, TITEM ite
WHERE ITE.COD_CURSO = CUR.COD_CURSO;

---- BOM (usa EXISTS em vez de DISTINCT)
SELECT product_id, name
FROM products outer
WHERE EXISTS (SELECT 1 FROM purchases INNER WHERE inner.product_id = outer.product_id);

-- USE GROUPING SETS EM VEZ DE CUBE



